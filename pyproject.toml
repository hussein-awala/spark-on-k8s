[tool.poetry]
name = "spark-on-k8s"
version = "0.7.1"
description = "A Python package to submit and manage Apache Spark applications on Kubernetes."
authors = ["Hussein Awala <hussein@awala.fr>"]
readme = "README.md"
repository = "https://github.com/hussein-awala/spark-on-k8s"
keywords = ["spark", "kubernetes", "k8s", "spark-submit", "spark-on-k8s"]
license = "Apache-2.0"
packages = [{include = "spark_on_k8s"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/hussein-awala/spark-on-k8s/issues"
"Documentation" = "https://github.com/hussein-awala/spark-on-k8s/blob/main/README.md"

[tool.poetry.dependencies]
python = "^3.8"
kubernetes = ">=26.1.0"
click = "^8.0.1"
fastapi = {version = "^0.109.1", optional = true}
kubernetes-asyncio = {version = ">=26.9.0", optional = true}
uvicorn = {version = "^0.26.0", optional = true}
httpx = {version = "^0.26.0", optional = true}
jinja2 = {version = "^3.1.3", optional = true}
apache-airflow = {version = ">=2.6.0", python = "<3.12", optional = true}
apache-airflow-providers-cncf-kubernetes = {version = ">=7.0.0", python = "<3.12", optional = true}
pendulum = {version = "<3.0.0", python = "<3.12", optional = true}
aiohttp = {version = ">=3.9.2", optional = true}  # CVE-2024-23829, CVE-2024-23334
websockets = {version = "^12", optional = true}

[tool.poetry.dev-dependencies]
mock = "^5.1.0"
pytest = "^7.4.3"
pytest-cov = "^5.0.0"
pre-commit = "^3"
freezegun = "^1.4.0"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.21"
mkdocstrings = {version = "^0.25.1", extras = ["python"]}
mkdocs-gen-files = "^0.5.0"
mkdocs-literate-nav = "^0.6.1"
helm-mkdocs = "^0.0.5"

[tool.poetry.extras]
api = ["fastapi", "kubernetes-asyncio", "uvicorn", "httpx", "jinja2", "aiohttp", "websockets"]
airflow = ["kubernetes-asyncio", "apache-airflow", "apache-airflow-providers-cncf-kubernetes", "pendulum"]

[tool.poetry.scripts]
spark-on-k8s = "spark_on_k8s:cli.main"

[tool.poetry.plugins."apache_airflow_provider"]
provider_info = "spark_on_k8s.airflow.provider_info:get_provider_info"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py38"
line-length = 110
indent-width = 4
src = ["spark_on_k8s", "tests"]
fixable = ["ALL"]
ignore = ["E712"]
select = [
    "E", # pycodestyle
    "W", # pycodestyle
    "F", # Pyflakes
    "B", # flake8-bugbear
    "PIE", # flake8-pie
    "C4", # flake8-comprehensions
    "I", # isort
    "UP", # pyupgrade,
    "TCH", # flake8-type-checking
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "google"
